/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 gandalf.gltf 
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';
import { button, useControls } from 'leva'

const Gandalf = (props) => {
  const [active, setActive] = useState(false);

  const clickHandler = () => {
    setActive(!active);
    console.log(active);
  }

  const levaControls = useControls("Gandalf",{
    PortalClose: button(() => {
      actions.PortalOpen.play();
    }),
    Waiting: button(() => {
      actions.PortalOpen.stop();
      actions.Waiting.play();
    }),
    Still: button(() => {
      actions.PortalOpen.stop();
      actions.Waiting.stop();
      actions.Still.play();
    }),
  })

  const group = useRef()
  const { nodes, materials, animations, scene } = useGLTF('/models/gandalf.gltf');

  const animationFromGandalf = useAnimations(animations, scene);

  const { actions } = useAnimations(animations, group)
  useFrame((_, delta) => {
    //group.current.rotation.y += delta;  
  });

  console.log("animationFromGandalf: ", animationFromGandalf);
  console.log("Actions: ", actions);

  useEffect(() => {
    //animations.AnimationClip.Portal
    //actions.Waiting.play();
    
    actions.Waiting.play();
  }, []);

  return (
    <group ref={group} {...props} dispose={null} onClick={clickHandler}>
      <group name="Scene">
        <group name="Armature_druide" scale={1.908}>
          <primitive object={nodes.root} />
          <skinnedMesh name="druid" geometry={nodes.druid.geometry} material={materials.color_main} skeleton={nodes.druid.skeleton} />
        </group>
      </group>
    </group>
  )
}
useGLTF.preload('/models/gandalf.gltf');
export default Gandalf;

